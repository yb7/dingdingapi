// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dingding.proto

/*
Package pbdingding is a generated protocol buffer package.

It is generated from these files:
	dingding.proto

It has these top-level messages:
	SendDingMessageRequest
	SendDingMessageResponse
	GetJssdkSignRequest
	GetJssdkSignResponse
	GetDingUserInfoRequest
	GetDingUserInfoResponse
	Departments
	GetDepartmentsRequest
	GetUsersInDepartmentRequest
	UsersInDepartment
	UnionID
	UserID
*/
package pbdingding

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendDingMessageRequest struct {
	Content    *SendDingMessageRequest_Content `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	MsgType    string                          `protobuf:"bytes,2,opt,name=msgType" json:"msgType,omitempty"`
	Recipients []string                        `protobuf:"bytes,3,rep,name=recipients" json:"recipients,omitempty"`
	Method     string                          `protobuf:"bytes,4,opt,name=method" json:"method,omitempty"`
}

func (m *SendDingMessageRequest) Reset()                    { *m = SendDingMessageRequest{} }
func (m *SendDingMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*SendDingMessageRequest) ProtoMessage()               {}
func (*SendDingMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SendDingMessageRequest) GetContent() *SendDingMessageRequest_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *SendDingMessageRequest) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *SendDingMessageRequest) GetRecipients() []string {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *SendDingMessageRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

type SendDingMessageRequest_Content struct {
	Body       *SendDingMessageRequest_Content_Body `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	Head       *SendDingMessageRequest_Content_Head `protobuf:"bytes,2,opt,name=head" json:"head,omitempty"`
	MessageUrl string                               `protobuf:"bytes,3,opt,name=message_url,json=messageUrl" json:"message_url,omitempty"`
}

func (m *SendDingMessageRequest_Content) Reset()         { *m = SendDingMessageRequest_Content{} }
func (m *SendDingMessageRequest_Content) String() string { return proto.CompactTextString(m) }
func (*SendDingMessageRequest_Content) ProtoMessage()    {}
func (*SendDingMessageRequest_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

func (m *SendDingMessageRequest_Content) GetBody() *SendDingMessageRequest_Content_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *SendDingMessageRequest_Content) GetHead() *SendDingMessageRequest_Content_Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *SendDingMessageRequest_Content) GetMessageUrl() string {
	if m != nil {
		return m.MessageUrl
	}
	return ""
}

type SendDingMessageRequest_Content_Body struct {
	Author    string                                      `protobuf:"bytes,1,opt,name=author" json:"author,omitempty"`
	Content   string                                      `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	FileCount string                                      `protobuf:"bytes,3,opt,name=file_count,json=fileCount" json:"file_count,omitempty"`
	Form      []*SendDingMessageRequest_Content_Body_Form `protobuf:"bytes,4,rep,name=form" json:"form,omitempty"`
	Image     string                                      `protobuf:"bytes,5,opt,name=image" json:"image,omitempty"`
	Rich      *SendDingMessageRequest_Content_Body_Rich   `protobuf:"bytes,6,opt,name=rich" json:"rich,omitempty"`
	Title     string                                      `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
}

func (m *SendDingMessageRequest_Content_Body) Reset()         { *m = SendDingMessageRequest_Content_Body{} }
func (m *SendDingMessageRequest_Content_Body) String() string { return proto.CompactTextString(m) }
func (*SendDingMessageRequest_Content_Body) ProtoMessage()    {}
func (*SendDingMessageRequest_Content_Body) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0}
}

func (m *SendDingMessageRequest_Content_Body) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body) GetFileCount() string {
	if m != nil {
		return m.FileCount
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body) GetForm() []*SendDingMessageRequest_Content_Body_Form {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *SendDingMessageRequest_Content_Body) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body) GetRich() *SendDingMessageRequest_Content_Body_Rich {
	if m != nil {
		return m.Rich
	}
	return nil
}

func (m *SendDingMessageRequest_Content_Body) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type SendDingMessageRequest_Content_Body_Form struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SendDingMessageRequest_Content_Body_Form) Reset() {
	*m = SendDingMessageRequest_Content_Body_Form{}
}
func (m *SendDingMessageRequest_Content_Body_Form) String() string { return proto.CompactTextString(m) }
func (*SendDingMessageRequest_Content_Body_Form) ProtoMessage()    {}
func (*SendDingMessageRequest_Content_Body_Form) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0, 0}
}

func (m *SendDingMessageRequest_Content_Body_Form) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body_Form) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SendDingMessageRequest_Content_Body_Rich struct {
	Num  string `protobuf:"bytes,1,opt,name=num" json:"num,omitempty"`
	Unit string `protobuf:"bytes,2,opt,name=unit" json:"unit,omitempty"`
}

func (m *SendDingMessageRequest_Content_Body_Rich) Reset() {
	*m = SendDingMessageRequest_Content_Body_Rich{}
}
func (m *SendDingMessageRequest_Content_Body_Rich) String() string { return proto.CompactTextString(m) }
func (*SendDingMessageRequest_Content_Body_Rich) ProtoMessage()    {}
func (*SendDingMessageRequest_Content_Body_Rich) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0, 1}
}

func (m *SendDingMessageRequest_Content_Body_Rich) GetNum() string {
	if m != nil {
		return m.Num
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body_Rich) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

type SendDingMessageRequest_Content_Head struct {
	Bgcolor string `protobuf:"bytes,1,opt,name=bgcolor" json:"bgcolor,omitempty"`
	Text    string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *SendDingMessageRequest_Content_Head) Reset()         { *m = SendDingMessageRequest_Content_Head{} }
func (m *SendDingMessageRequest_Content_Head) String() string { return proto.CompactTextString(m) }
func (*SendDingMessageRequest_Content_Head) ProtoMessage()    {}
func (*SendDingMessageRequest_Content_Head) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 1}
}

func (m *SendDingMessageRequest_Content_Head) GetBgcolor() string {
	if m != nil {
		return m.Bgcolor
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Head) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type SendDingMessageResponse struct {
	DingOpenErrorCode int32  `protobuf:"varint,1,opt,name=dingOpenErrorCode" json:"dingOpenErrorCode,omitempty"`
	ErrorMsg          string `protobuf:"bytes,2,opt,name=errorMsg" json:"errorMsg,omitempty"`
	Success           bool   `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	TaskID            int64  `protobuf:"varint,4,opt,name=taskID" json:"taskID,omitempty"`
	RequestID         string `protobuf:"bytes,5,opt,name=requestID" json:"requestID,omitempty"`
}

func (m *SendDingMessageResponse) Reset()                    { *m = SendDingMessageResponse{} }
func (m *SendDingMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*SendDingMessageResponse) ProtoMessage()               {}
func (*SendDingMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SendDingMessageResponse) GetDingOpenErrorCode() int32 {
	if m != nil {
		return m.DingOpenErrorCode
	}
	return 0
}

func (m *SendDingMessageResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *SendDingMessageResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendDingMessageResponse) GetTaskID() int64 {
	if m != nil {
		return m.TaskID
	}
	return 0
}

func (m *SendDingMessageResponse) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

type GetJssdkSignRequest struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *GetJssdkSignRequest) Reset()                    { *m = GetJssdkSignRequest{} }
func (m *GetJssdkSignRequest) String() string            { return proto.CompactTextString(m) }
func (*GetJssdkSignRequest) ProtoMessage()               {}
func (*GetJssdkSignRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetJssdkSignRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetJssdkSignResponse struct {
	AgentId   string `protobuf:"bytes,1,opt,name=agentId" json:"agentId,omitempty"`
	CorpId    string `protobuf:"bytes,2,opt,name=corpId" json:"corpId,omitempty"`
	NonceStr  string `protobuf:"bytes,3,opt,name=nonceStr" json:"nonceStr,omitempty"`
	Timestamp string `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Signature string `protobuf:"bytes,5,opt,name=signature" json:"signature,omitempty"`
	Url       string `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
}

func (m *GetJssdkSignResponse) Reset()                    { *m = GetJssdkSignResponse{} }
func (m *GetJssdkSignResponse) String() string            { return proto.CompactTextString(m) }
func (*GetJssdkSignResponse) ProtoMessage()               {}
func (*GetJssdkSignResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetJssdkSignResponse) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

func (m *GetJssdkSignResponse) GetCorpId() string {
	if m != nil {
		return m.CorpId
	}
	return ""
}

func (m *GetJssdkSignResponse) GetNonceStr() string {
	if m != nil {
		return m.NonceStr
	}
	return ""
}

func (m *GetJssdkSignResponse) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *GetJssdkSignResponse) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *GetJssdkSignResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetDingUserInfoRequest struct {
	TmpAuthCode string `protobuf:"bytes,1,opt,name=tmpAuthCode" json:"tmpAuthCode,omitempty"`
}

func (m *GetDingUserInfoRequest) Reset()                    { *m = GetDingUserInfoRequest{} }
func (m *GetDingUserInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDingUserInfoRequest) ProtoMessage()               {}
func (*GetDingUserInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetDingUserInfoRequest) GetTmpAuthCode() string {
	if m != nil {
		return m.TmpAuthCode
	}
	return ""
}

type GetDingUserInfoResponse struct {
	MaskedMobile string `protobuf:"bytes,1,opt,name=maskedMobile" json:"maskedMobile,omitempty"`
	Nick         string `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	Unionid      string `protobuf:"bytes,3,opt,name=unionid" json:"unionid,omitempty"`
	DingId       string `protobuf:"bytes,4,opt,name=dingId" json:"dingId,omitempty"`
	Openid       string `protobuf:"bytes,5,opt,name=openid" json:"openid,omitempty"`
	SnsToken     string `protobuf:"bytes,6,opt,name=snsToken" json:"snsToken,omitempty"`
}

func (m *GetDingUserInfoResponse) Reset()                    { *m = GetDingUserInfoResponse{} }
func (m *GetDingUserInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDingUserInfoResponse) ProtoMessage()               {}
func (*GetDingUserInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetDingUserInfoResponse) GetMaskedMobile() string {
	if m != nil {
		return m.MaskedMobile
	}
	return ""
}

func (m *GetDingUserInfoResponse) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *GetDingUserInfoResponse) GetUnionid() string {
	if m != nil {
		return m.Unionid
	}
	return ""
}

func (m *GetDingUserInfoResponse) GetDingId() string {
	if m != nil {
		return m.DingId
	}
	return ""
}

func (m *GetDingUserInfoResponse) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

func (m *GetDingUserInfoResponse) GetSnsToken() string {
	if m != nil {
		return m.SnsToken
	}
	return ""
}

type Departments struct {
	Departments []*Departments_Department `protobuf:"bytes,1,rep,name=departments" json:"departments,omitempty"`
}

func (m *Departments) Reset()                    { *m = Departments{} }
func (m *Departments) String() string            { return proto.CompactTextString(m) }
func (*Departments) ProtoMessage()               {}
func (*Departments) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Departments) GetDepartments() []*Departments_Department {
	if m != nil {
		return m.Departments
	}
	return nil
}

type Departments_Department struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ParentID int64  `protobuf:"varint,3,opt,name=parentID" json:"parentID,omitempty"`
}

func (m *Departments_Department) Reset()                    { *m = Departments_Department{} }
func (m *Departments_Department) String() string            { return proto.CompactTextString(m) }
func (*Departments_Department) ProtoMessage()               {}
func (*Departments_Department) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

func (m *Departments_Department) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Departments_Department) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Departments_Department) GetParentID() int64 {
	if m != nil {
		return m.ParentID
	}
	return 0
}

type GetDepartmentsRequest struct {
}

func (m *GetDepartmentsRequest) Reset()                    { *m = GetDepartmentsRequest{} }
func (m *GetDepartmentsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDepartmentsRequest) ProtoMessage()               {}
func (*GetDepartmentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type GetUsersInDepartmentRequest struct {
	DepartmentID int64 `protobuf:"varint,1,opt,name=departmentID" json:"departmentID,omitempty"`
}

func (m *GetUsersInDepartmentRequest) Reset()                    { *m = GetUsersInDepartmentRequest{} }
func (m *GetUsersInDepartmentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUsersInDepartmentRequest) ProtoMessage()               {}
func (*GetUsersInDepartmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetUsersInDepartmentRequest) GetDepartmentID() int64 {
	if m != nil {
		return m.DepartmentID
	}
	return 0
}

type UsersInDepartment struct {
	Users []*UsersInDepartment_User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *UsersInDepartment) Reset()                    { *m = UsersInDepartment{} }
func (m *UsersInDepartment) String() string            { return proto.CompactTextString(m) }
func (*UsersInDepartment) ProtoMessage()               {}
func (*UsersInDepartment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UsersInDepartment) GetUsers() []*UsersInDepartment_User {
	if m != nil {
		return m.Users
	}
	return nil
}

type UsersInDepartment_User struct {
	Userid     string  `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Unionid    string  `protobuf:"bytes,2,opt,name=unionid" json:"unionid,omitempty"`
	Mobile     string  `protobuf:"bytes,3,opt,name=mobile" json:"mobile,omitempty"`
	Name       string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Active     bool    `protobuf:"varint,5,opt,name=active" json:"active,omitempty"`
	Department []int32 `protobuf:"varint,6,rep,packed,name=department" json:"department,omitempty"`
}

func (m *UsersInDepartment_User) Reset()                    { *m = UsersInDepartment_User{} }
func (m *UsersInDepartment_User) String() string            { return proto.CompactTextString(m) }
func (*UsersInDepartment_User) ProtoMessage()               {}
func (*UsersInDepartment_User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

func (m *UsersInDepartment_User) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *UsersInDepartment_User) GetUnionid() string {
	if m != nil {
		return m.Unionid
	}
	return ""
}

func (m *UsersInDepartment_User) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UsersInDepartment_User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UsersInDepartment_User) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *UsersInDepartment_User) GetDepartment() []int32 {
	if m != nil {
		return m.Department
	}
	return nil
}

type UnionID struct {
	UnionID string `protobuf:"bytes,1,opt,name=unionID" json:"unionID,omitempty"`
}

func (m *UnionID) Reset()                    { *m = UnionID{} }
func (m *UnionID) String() string            { return proto.CompactTextString(m) }
func (*UnionID) ProtoMessage()               {}
func (*UnionID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UnionID) GetUnionID() string {
	if m != nil {
		return m.UnionID
	}
	return ""
}

type UserID struct {
	UserID string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
}

func (m *UserID) Reset()                    { *m = UserID{} }
func (m *UserID) String() string            { return proto.CompactTextString(m) }
func (*UserID) ProtoMessage()               {}
func (*UserID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *UserID) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func init() {
	proto.RegisterType((*SendDingMessageRequest)(nil), "pbdingding.SendDingMessageRequest")
	proto.RegisterType((*SendDingMessageRequest_Content)(nil), "pbdingding.SendDingMessageRequest.Content")
	proto.RegisterType((*SendDingMessageRequest_Content_Body)(nil), "pbdingding.SendDingMessageRequest.Content.Body")
	proto.RegisterType((*SendDingMessageRequest_Content_Body_Form)(nil), "pbdingding.SendDingMessageRequest.Content.Body.Form")
	proto.RegisterType((*SendDingMessageRequest_Content_Body_Rich)(nil), "pbdingding.SendDingMessageRequest.Content.Body.Rich")
	proto.RegisterType((*SendDingMessageRequest_Content_Head)(nil), "pbdingding.SendDingMessageRequest.Content.Head")
	proto.RegisterType((*SendDingMessageResponse)(nil), "pbdingding.SendDingMessageResponse")
	proto.RegisterType((*GetJssdkSignRequest)(nil), "pbdingding.GetJssdkSignRequest")
	proto.RegisterType((*GetJssdkSignResponse)(nil), "pbdingding.GetJssdkSignResponse")
	proto.RegisterType((*GetDingUserInfoRequest)(nil), "pbdingding.GetDingUserInfoRequest")
	proto.RegisterType((*GetDingUserInfoResponse)(nil), "pbdingding.GetDingUserInfoResponse")
	proto.RegisterType((*Departments)(nil), "pbdingding.Departments")
	proto.RegisterType((*Departments_Department)(nil), "pbdingding.Departments.Department")
	proto.RegisterType((*GetDepartmentsRequest)(nil), "pbdingding.GetDepartmentsRequest")
	proto.RegisterType((*GetUsersInDepartmentRequest)(nil), "pbdingding.GetUsersInDepartmentRequest")
	proto.RegisterType((*UsersInDepartment)(nil), "pbdingding.UsersInDepartment")
	proto.RegisterType((*UsersInDepartment_User)(nil), "pbdingding.UsersInDepartment.User")
	proto.RegisterType((*UnionID)(nil), "pbdingding.UnionID")
	proto.RegisterType((*UserID)(nil), "pbdingding.UserID")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DingDing service

type DingDingClient interface {
	SendMessage(ctx context.Context, in *SendDingMessageRequest, opts ...grpc.CallOption) (*SendDingMessageResponse, error)
	GetJssdkSign(ctx context.Context, in *GetJssdkSignRequest, opts ...grpc.CallOption) (*GetJssdkSignResponse, error)
	GetDingUserInfo(ctx context.Context, in *GetDingUserInfoRequest, opts ...grpc.CallOption) (*GetDingUserInfoResponse, error)
	GetDepartments(ctx context.Context, in *GetDepartmentsRequest, opts ...grpc.CallOption) (*Departments, error)
	GetUsersInDepartment(ctx context.Context, in *GetUsersInDepartmentRequest, opts ...grpc.CallOption) (*UsersInDepartment, error)
	GetUserIdFromUnionId(ctx context.Context, in *UnionID, opts ...grpc.CallOption) (*UserID, error)
}

type dingDingClient struct {
	cc *grpc.ClientConn
}

func NewDingDingClient(cc *grpc.ClientConn) DingDingClient {
	return &dingDingClient{cc}
}

func (c *dingDingClient) SendMessage(ctx context.Context, in *SendDingMessageRequest, opts ...grpc.CallOption) (*SendDingMessageResponse, error) {
	out := new(SendDingMessageResponse)
	err := grpc.Invoke(ctx, "/pbdingding.DingDing/SendMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dingDingClient) GetJssdkSign(ctx context.Context, in *GetJssdkSignRequest, opts ...grpc.CallOption) (*GetJssdkSignResponse, error) {
	out := new(GetJssdkSignResponse)
	err := grpc.Invoke(ctx, "/pbdingding.DingDing/GetJssdkSign", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dingDingClient) GetDingUserInfo(ctx context.Context, in *GetDingUserInfoRequest, opts ...grpc.CallOption) (*GetDingUserInfoResponse, error) {
	out := new(GetDingUserInfoResponse)
	err := grpc.Invoke(ctx, "/pbdingding.DingDing/GetDingUserInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dingDingClient) GetDepartments(ctx context.Context, in *GetDepartmentsRequest, opts ...grpc.CallOption) (*Departments, error) {
	out := new(Departments)
	err := grpc.Invoke(ctx, "/pbdingding.DingDing/GetDepartments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dingDingClient) GetUsersInDepartment(ctx context.Context, in *GetUsersInDepartmentRequest, opts ...grpc.CallOption) (*UsersInDepartment, error) {
	out := new(UsersInDepartment)
	err := grpc.Invoke(ctx, "/pbdingding.DingDing/GetUsersInDepartment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dingDingClient) GetUserIdFromUnionId(ctx context.Context, in *UnionID, opts ...grpc.CallOption) (*UserID, error) {
	out := new(UserID)
	err := grpc.Invoke(ctx, "/pbdingding.DingDing/GetUserIdFromUnionId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DingDing service

type DingDingServer interface {
	SendMessage(context.Context, *SendDingMessageRequest) (*SendDingMessageResponse, error)
	GetJssdkSign(context.Context, *GetJssdkSignRequest) (*GetJssdkSignResponse, error)
	GetDingUserInfo(context.Context, *GetDingUserInfoRequest) (*GetDingUserInfoResponse, error)
	GetDepartments(context.Context, *GetDepartmentsRequest) (*Departments, error)
	GetUsersInDepartment(context.Context, *GetUsersInDepartmentRequest) (*UsersInDepartment, error)
	GetUserIdFromUnionId(context.Context, *UnionID) (*UserID, error)
}

func RegisterDingDingServer(s *grpc.Server, srv DingDingServer) {
	s.RegisterService(&_DingDing_serviceDesc, srv)
}

func _DingDing_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendDingMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DingDingServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbdingding.DingDing/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DingDingServer).SendMessage(ctx, req.(*SendDingMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DingDing_GetJssdkSign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJssdkSignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DingDingServer).GetJssdkSign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbdingding.DingDing/GetJssdkSign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DingDingServer).GetJssdkSign(ctx, req.(*GetJssdkSignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DingDing_GetDingUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDingUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DingDingServer).GetDingUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbdingding.DingDing/GetDingUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DingDingServer).GetDingUserInfo(ctx, req.(*GetDingUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DingDing_GetDepartments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDepartmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DingDingServer).GetDepartments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbdingding.DingDing/GetDepartments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DingDingServer).GetDepartments(ctx, req.(*GetDepartmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DingDing_GetUsersInDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsersInDepartmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DingDingServer).GetUsersInDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbdingding.DingDing/GetUsersInDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DingDingServer).GetUsersInDepartment(ctx, req.(*GetUsersInDepartmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DingDing_GetUserIdFromUnionId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnionID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DingDingServer).GetUserIdFromUnionId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbdingding.DingDing/GetUserIdFromUnionId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DingDingServer).GetUserIdFromUnionId(ctx, req.(*UnionID))
	}
	return interceptor(ctx, in, info, handler)
}

var _DingDing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbdingding.DingDing",
	HandlerType: (*DingDingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _DingDing_SendMessage_Handler,
		},
		{
			MethodName: "GetJssdkSign",
			Handler:    _DingDing_GetJssdkSign_Handler,
		},
		{
			MethodName: "GetDingUserInfo",
			Handler:    _DingDing_GetDingUserInfo_Handler,
		},
		{
			MethodName: "GetDepartments",
			Handler:    _DingDing_GetDepartments_Handler,
		},
		{
			MethodName: "GetUsersInDepartment",
			Handler:    _DingDing_GetUsersInDepartment_Handler,
		},
		{
			MethodName: "GetUserIdFromUnionId",
			Handler:    _DingDing_GetUserIdFromUnionId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dingding.proto",
}

func init() { proto.RegisterFile("dingding.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1010 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x41, 0x6f, 0xdc, 0x44,
	0x14, 0xd6, 0xc6, 0xce, 0x6e, 0xf6, 0x6d, 0x14, 0xda, 0x69, 0x49, 0x2c, 0x43, 0xe9, 0xe2, 0x1e,
	0x1a, 0xa1, 0x6a, 0x91, 0x42, 0x0f, 0x88, 0x0b, 0x2a, 0x31, 0x4d, 0x8d, 0x1a, 0x21, 0x9c, 0x86,
	0x03, 0x07, 0x2a, 0xaf, 0x3d, 0xf1, 0x8e, 0x76, 0x3d, 0x63, 0x3c, 0xe3, 0x8a, 0xdc, 0xf8, 0x13,
	0xdc, 0xb8, 0xf0, 0x17, 0xe0, 0xc0, 0xff, 0xe1, 0xcc, 0x95, 0x3b, 0x7a, 0xe3, 0x19, 0xdb, 0x9b,
	0x4d, 0x4a, 0x73, 0x88, 0x34, 0xdf, 0xf3, 0x7b, 0x6f, 0xde, 0xfb, 0xde, 0x37, 0x6f, 0x03, 0x7b,
	0x19, 0xe3, 0x39, 0xfe, 0xcd, 0xca, 0x4a, 0x28, 0x41, 0xa0, 0x9c, 0x5b, 0x4b, 0xf0, 0xeb, 0x10,
	0xf6, 0xcf, 0x28, 0xcf, 0x42, 0xc6, 0xf3, 0x53, 0x2a, 0x65, 0x92, 0xd3, 0x98, 0xfe, 0x54, 0x53,
	0xa9, 0x48, 0x08, 0xa3, 0x54, 0x70, 0x45, 0xb9, 0xf2, 0x06, 0xd3, 0xc1, 0xe1, 0xe4, 0xe8, 0x93,
	0x59, 0x17, 0x38, 0xbb, 0x3e, 0x68, 0x76, 0xdc, 0x44, 0xc4, 0x36, 0x94, 0x78, 0x30, 0x2a, 0x64,
	0xfe, 0xea, 0xb2, 0xa4, 0xde, 0xd6, 0x74, 0x70, 0x38, 0x8e, 0x2d, 0x24, 0x1f, 0x01, 0x54, 0x34,
	0x65, 0x25, 0xa3, 0x5c, 0x49, 0xcf, 0x99, 0x3a, 0x87, 0xe3, 0xb8, 0x67, 0x21, 0xfb, 0x30, 0x2c,
	0xa8, 0x5a, 0x88, 0xcc, 0x73, 0x75, 0xa0, 0x41, 0xfe, 0xdf, 0x2e, 0x8c, 0xcc, 0x35, 0xe4, 0x18,
	0xdc, 0xb9, 0xc8, 0x2e, 0x4d, 0x81, 0x9f, 0xbe, 0x7b, 0x81, 0xb3, 0xaf, 0x44, 0x76, 0x19, 0xeb,
	0x60, 0x4c, 0xb2, 0xa0, 0x49, 0xa6, 0xeb, 0xbb, 0x5d, 0x92, 0x17, 0x34, 0xc9, 0x62, 0x1d, 0x4c,
	0x1e, 0xc2, 0xa4, 0x68, 0x9c, 0x5e, 0xd7, 0xd5, 0xca, 0x73, 0x74, 0xc9, 0x60, 0x4c, 0xe7, 0xd5,
	0xca, 0xff, 0x77, 0x0b, 0x5c, 0xbc, 0x14, 0xfb, 0x4a, 0x6a, 0xb5, 0x10, 0x95, 0xae, 0x7a, 0x1c,
	0x1b, 0x84, 0x4c, 0x59, 0xbe, 0x0d, 0x53, 0x96, 0xc3, 0x07, 0x00, 0x17, 0x6c, 0x45, 0x5f, 0xa7,
	0xa2, 0xe6, 0xca, 0xa4, 0x1e, 0xa3, 0xe5, 0x18, 0x0d, 0xe4, 0x05, 0xb8, 0x17, 0xa2, 0x2a, 0x3c,
	0x77, 0xea, 0x1c, 0x4e, 0x8e, 0x9e, 0xde, 0x92, 0x84, 0xd9, 0x73, 0x51, 0x15, 0xb1, 0xce, 0x40,
	0xee, 0xc3, 0x36, 0x2b, 0x92, 0x9c, 0x7a, 0xdb, 0xfa, 0x8e, 0x06, 0x60, 0xfe, 0x8a, 0xa5, 0x0b,
	0x6f, 0xa8, 0xf9, 0xb9, 0x75, 0xfe, 0x98, 0xa5, 0x8b, 0x58, 0x67, 0xc0, 0xfc, 0x8a, 0xa9, 0x15,
	0xf5, 0x46, 0x4d, 0x7e, 0x0d, 0xfc, 0x19, 0xb8, 0x58, 0x03, 0xb9, 0x03, 0xce, 0x92, 0x5e, 0x1a,
	0x56, 0xf0, 0x88, 0xfe, 0x6f, 0x92, 0x55, 0x6d, 0xa5, 0xd3, 0x00, 0xff, 0x09, 0xb8, 0x98, 0x13,
	0xfd, 0x79, 0x5d, 0x58, 0x7f, 0x5e, 0x17, 0x84, 0x80, 0x5b, 0x73, 0x66, 0xf9, 0xd3, 0x67, 0xff,
	0x29, 0xb8, 0x38, 0x26, 0xa4, 0x77, 0x9e, 0xa7, 0x62, 0xd5, 0xf2, 0x6e, 0x21, 0x46, 0x29, 0xfa,
	0x73, 0x1b, 0x85, 0xe7, 0xe0, 0xcf, 0x01, 0x1c, 0x6c, 0x34, 0x27, 0x4b, 0xc1, 0x25, 0x25, 0x4f,
	0xe0, 0x2e, 0x36, 0xff, 0x6d, 0x49, 0xf9, 0xd7, 0x55, 0x25, 0xaa, 0x63, 0x91, 0x51, 0x9d, 0x73,
	0x3b, 0xde, 0xfc, 0x40, 0x7c, 0xd8, 0xa1, 0x08, 0x4e, 0x65, 0x6e, 0x6e, 0x68, 0x31, 0xd6, 0x24,
	0xeb, 0x34, 0xa5, 0x52, 0xea, 0xa9, 0xee, 0xc4, 0x16, 0xa2, 0x48, 0x54, 0x22, 0x97, 0x51, 0xa8,
	0xc5, 0xef, 0xc4, 0x06, 0x91, 0x0f, 0x61, 0x5c, 0x35, 0x24, 0x47, 0xa1, 0x99, 0x52, 0x67, 0x08,
	0x1e, 0xc3, 0xbd, 0x13, 0xaa, 0xbe, 0x91, 0x32, 0x5b, 0x9e, 0xb1, 0x9c, 0xdb, 0x97, 0x7c, 0x07,
	0x1c, 0xd4, 0xa4, 0x21, 0xaa, 0xae, 0x56, 0xc1, 0x1f, 0x03, 0xb8, 0xbf, 0xee, 0x69, 0x7a, 0xf3,
	0x60, 0x94, 0xe4, 0x94, 0xab, 0x28, 0xb3, 0x2c, 0x19, 0x88, 0x15, 0xa5, 0xa2, 0x2a, 0xa3, 0xcc,
	0x74, 0x61, 0x10, 0xf6, 0xc7, 0x05, 0x4f, 0xe9, 0x99, 0xaa, 0x8c, 0x34, 0x5b, 0x8c, 0xd5, 0x2a,
	0x56, 0x50, 0xa9, 0x92, 0xa2, 0x34, 0xaf, 0xb8, 0x33, 0xe0, 0x57, 0xc9, 0x72, 0x9e, 0xa8, 0xba,
	0xb2, 0x8a, 0xeb, 0x0c, 0xb6, 0xe8, 0x61, 0x57, 0xf4, 0x17, 0xb0, 0x7f, 0x42, 0x15, 0x4e, 0xe4,
	0x5c, 0xd2, 0x2a, 0xe2, 0x17, 0xc2, 0x36, 0x38, 0x85, 0x89, 0x2a, 0xca, 0x67, 0xb5, 0x5a, 0xb4,
	0xb3, 0x18, 0xc7, 0x7d, 0x53, 0xf0, 0xd7, 0x00, 0x0e, 0x36, 0x82, 0x4d, 0xcf, 0x01, 0xec, 0x16,
	0x89, 0x5c, 0xd2, 0xec, 0x54, 0xcc, 0xd9, 0xca, 0x86, 0xaf, 0xd9, 0x50, 0x23, 0x9c, 0xa5, 0x4b,
	0xab, 0x11, 0x3c, 0x23, 0x57, 0x35, 0x67, 0x82, 0xb3, 0xcc, 0x34, 0x6e, 0x21, 0x72, 0x85, 0x42,
	0x88, 0xda, 0xd5, 0xd5, 0x20, 0xb4, 0x8b, 0x92, 0x62, 0x40, 0xd3, 0xae, 0x41, 0xc8, 0xa1, 0xe4,
	0xf2, 0x95, 0x58, 0x52, 0x6e, 0x1a, 0x6e, 0x71, 0xf0, 0xfb, 0x00, 0x26, 0x21, 0x2d, 0x93, 0x4a,
	0x15, 0x7a, 0x2d, 0x86, 0x30, 0xc9, 0x3a, 0xe8, 0x0d, 0xf4, 0xa3, 0x0f, 0xfa, 0x8f, 0xb2, 0xe7,
	0xdd, 0x3b, 0xc7, 0xfd, 0x30, 0xff, 0x25, 0x40, 0xf7, 0x89, 0xec, 0xc1, 0x16, 0x6b, 0x06, 0xee,
	0xc4, 0x5b, 0x2c, 0xd3, 0xdd, 0x26, 0x05, 0x6d, 0xbb, 0x4d, 0x0a, 0xad, 0xe3, 0x32, 0xa9, 0x50,
	0x0b, 0xa1, 0x6e, 0xd7, 0x89, 0x5b, 0x1c, 0x1c, 0xc0, 0xfb, 0x48, 0x6e, 0x97, 0xdf, 0x0c, 0x26,
	0x78, 0x06, 0x1f, 0x9c, 0x50, 0x85, 0x8c, 0xcb, 0x88, 0xf7, 0x6a, 0x31, 0x73, 0x0b, 0x60, 0xb7,
	0x2b, 0x2a, 0x0a, 0x4d, 0x05, 0x6b, 0xb6, 0xe0, 0x9f, 0x01, 0xdc, 0xdd, 0x48, 0x40, 0x3e, 0x87,
	0xed, 0x1a, 0x8d, 0xd7, 0xf5, 0xbf, 0xe1, 0xad, 0x2d, 0x71, 0x13, 0xe0, 0xff, 0x36, 0x00, 0x17,
	0x31, 0x0e, 0x03, 0x2d, 0xcc, 0x2a, 0xdd, 0xa0, 0xfe, 0x58, 0xb7, 0x36, 0xc6, 0x5a, 0x34, 0x12,
	0x71, 0xcc, 0x2f, 0x52, 0x27, 0x0e, 0xa4, 0xcb, 0xed, 0xd1, 0x85, 0x5b, 0x3e, 0x55, 0xec, 0x4d,
	0xa3, 0xec, 0x9d, 0xd8, 0x20, 0xfc, 0xd5, 0xeb, 0xda, 0xf3, 0x86, 0x53, 0xe7, 0x70, 0x3b, 0xee,
	0x59, 0x82, 0x47, 0x30, 0x3a, 0xc7, 0xeb, 0xa2, 0xb0, 0x2d, 0xc4, 0x10, 0x63, 0x0b, 0x89, 0xc2,
	0x60, 0x0a, 0x43, 0xad, 0xe2, 0xd0, 0x36, 0xd1, 0xba, 0x18, 0x74, 0xf4, 0x8b, 0x0b, 0x3b, 0x28,
	0x76, 0xfc, 0x23, 0xdf, 0xc3, 0x04, 0x77, 0x99, 0xd9, 0x63, 0x24, 0xf8, 0xff, 0x0d, 0xee, 0x3f,
	0x7a, 0xab, 0x8f, 0x79, 0x38, 0xdf, 0xc1, 0x6e, 0x7f, 0x89, 0x90, 0x87, 0xfd, 0xa0, 0x6b, 0x16,
	0x91, 0x3f, 0xbd, 0xd9, 0xc1, 0xa4, 0xfc, 0x01, 0xde, 0xbb, 0xf2, 0x4c, 0xd7, 0xcb, 0xbd, 0x7e,
	0x01, 0xac, 0x97, 0x7b, 0xd3, 0x3b, 0x7f, 0x09, 0x7b, 0xeb, 0x2a, 0x25, 0x1f, 0x5f, 0x0d, 0xdb,
	0x50, 0xb0, 0x7f, 0x70, 0xc3, 0xcb, 0x22, 0x3f, 0xea, 0x0d, 0xba, 0xa9, 0xcc, 0xc7, 0x57, 0x72,
	0xde, 0x24, 0x7e, 0xff, 0xc1, 0x5b, 0x35, 0x4b, 0xbe, 0x6c, 0xf3, 0x47, 0xd9, 0xf3, 0x4a, 0x14,
	0x8d, 0x2a, 0x32, 0x72, 0x6f, 0x2d, 0xac, 0x11, 0x84, 0x4f, 0xae, 0xe6, 0x8a, 0xc2, 0xf9, 0x50,
	0xff, 0xb7, 0xf7, 0xd9, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x00, 0xf1, 0xb4, 0x65, 0xff, 0x09,
	0x00, 0x00,
}
