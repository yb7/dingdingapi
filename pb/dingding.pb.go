// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dingding.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	dingding.proto

It has these top-level messages:
	SendDingMessageRequest
	SendDingMessageResponse
	GetJssdkSignRequest
	GetJssdkSignResponse
	GetDingUserInfoRequest
	GetDingUserInfoResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendDingMessageRequest struct {
	Content    *SendDingMessageRequest_Content `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	MsgType    string                          `protobuf:"bytes,2,opt,name=msgType" json:"msgType,omitempty"`
	Recipients []string                        `protobuf:"bytes,3,rep,name=recipients" json:"recipients,omitempty"`
}

func (m *SendDingMessageRequest) Reset()                    { *m = SendDingMessageRequest{} }
func (m *SendDingMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*SendDingMessageRequest) ProtoMessage()               {}
func (*SendDingMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SendDingMessageRequest) GetContent() *SendDingMessageRequest_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *SendDingMessageRequest) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *SendDingMessageRequest) GetRecipients() []string {
	if m != nil {
		return m.Recipients
	}
	return nil
}

type SendDingMessageRequest_Content struct {
	Body       *SendDingMessageRequest_Content_Body `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	Head       *SendDingMessageRequest_Content_Head `protobuf:"bytes,2,opt,name=head" json:"head,omitempty"`
	MessageUrl string                               `protobuf:"bytes,3,opt,name=message_url,json=messageUrl" json:"message_url,omitempty"`
}

func (m *SendDingMessageRequest_Content) Reset()         { *m = SendDingMessageRequest_Content{} }
func (m *SendDingMessageRequest_Content) String() string { return proto.CompactTextString(m) }
func (*SendDingMessageRequest_Content) ProtoMessage()    {}
func (*SendDingMessageRequest_Content) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

func (m *SendDingMessageRequest_Content) GetBody() *SendDingMessageRequest_Content_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *SendDingMessageRequest_Content) GetHead() *SendDingMessageRequest_Content_Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *SendDingMessageRequest_Content) GetMessageUrl() string {
	if m != nil {
		return m.MessageUrl
	}
	return ""
}

type SendDingMessageRequest_Content_Body struct {
	Author    string                                      `protobuf:"bytes,1,opt,name=author" json:"author,omitempty"`
	Content   string                                      `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	FileCount string                                      `protobuf:"bytes,3,opt,name=file_count,json=fileCount" json:"file_count,omitempty"`
	Form      []*SendDingMessageRequest_Content_Body_Form `protobuf:"bytes,4,rep,name=form" json:"form,omitempty"`
	Image     string                                      `protobuf:"bytes,5,opt,name=image" json:"image,omitempty"`
	Rich      *SendDingMessageRequest_Content_Body_Rich   `protobuf:"bytes,6,opt,name=rich" json:"rich,omitempty"`
	Title     string                                      `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
}

func (m *SendDingMessageRequest_Content_Body) Reset()         { *m = SendDingMessageRequest_Content_Body{} }
func (m *SendDingMessageRequest_Content_Body) String() string { return proto.CompactTextString(m) }
func (*SendDingMessageRequest_Content_Body) ProtoMessage()    {}
func (*SendDingMessageRequest_Content_Body) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0}
}

func (m *SendDingMessageRequest_Content_Body) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body) GetFileCount() string {
	if m != nil {
		return m.FileCount
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body) GetForm() []*SendDingMessageRequest_Content_Body_Form {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *SendDingMessageRequest_Content_Body) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body) GetRich() *SendDingMessageRequest_Content_Body_Rich {
	if m != nil {
		return m.Rich
	}
	return nil
}

func (m *SendDingMessageRequest_Content_Body) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type SendDingMessageRequest_Content_Body_Form struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SendDingMessageRequest_Content_Body_Form) Reset() {
	*m = SendDingMessageRequest_Content_Body_Form{}
}
func (m *SendDingMessageRequest_Content_Body_Form) String() string { return proto.CompactTextString(m) }
func (*SendDingMessageRequest_Content_Body_Form) ProtoMessage()    {}
func (*SendDingMessageRequest_Content_Body_Form) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0, 0}
}

func (m *SendDingMessageRequest_Content_Body_Form) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body_Form) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SendDingMessageRequest_Content_Body_Rich struct {
	Num  string `protobuf:"bytes,1,opt,name=num" json:"num,omitempty"`
	Unit string `protobuf:"bytes,2,opt,name=unit" json:"unit,omitempty"`
}

func (m *SendDingMessageRequest_Content_Body_Rich) Reset() {
	*m = SendDingMessageRequest_Content_Body_Rich{}
}
func (m *SendDingMessageRequest_Content_Body_Rich) String() string { return proto.CompactTextString(m) }
func (*SendDingMessageRequest_Content_Body_Rich) ProtoMessage()    {}
func (*SendDingMessageRequest_Content_Body_Rich) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0, 1}
}

func (m *SendDingMessageRequest_Content_Body_Rich) GetNum() string {
	if m != nil {
		return m.Num
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Body_Rich) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

type SendDingMessageRequest_Content_Head struct {
	Bgcolor string `protobuf:"bytes,1,opt,name=bgcolor" json:"bgcolor,omitempty"`
	Text    string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *SendDingMessageRequest_Content_Head) Reset()         { *m = SendDingMessageRequest_Content_Head{} }
func (m *SendDingMessageRequest_Content_Head) String() string { return proto.CompactTextString(m) }
func (*SendDingMessageRequest_Content_Head) ProtoMessage()    {}
func (*SendDingMessageRequest_Content_Head) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 1}
}

func (m *SendDingMessageRequest_Content_Head) GetBgcolor() string {
	if m != nil {
		return m.Bgcolor
	}
	return ""
}

func (m *SendDingMessageRequest_Content_Head) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type SendDingMessageResponse struct {
	DingOpenErrorCode int32  `protobuf:"varint,1,opt,name=dingOpenErrorCode" json:"dingOpenErrorCode,omitempty"`
	ErrorMsg          string `protobuf:"bytes,2,opt,name=errorMsg" json:"errorMsg,omitempty"`
	Success           bool   `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	TaskID            int32  `protobuf:"varint,4,opt,name=taskID" json:"taskID,omitempty"`
}

func (m *SendDingMessageResponse) Reset()                    { *m = SendDingMessageResponse{} }
func (m *SendDingMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*SendDingMessageResponse) ProtoMessage()               {}
func (*SendDingMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SendDingMessageResponse) GetDingOpenErrorCode() int32 {
	if m != nil {
		return m.DingOpenErrorCode
	}
	return 0
}

func (m *SendDingMessageResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *SendDingMessageResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendDingMessageResponse) GetTaskID() int32 {
	if m != nil {
		return m.TaskID
	}
	return 0
}

type GetJssdkSignRequest struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *GetJssdkSignRequest) Reset()                    { *m = GetJssdkSignRequest{} }
func (m *GetJssdkSignRequest) String() string            { return proto.CompactTextString(m) }
func (*GetJssdkSignRequest) ProtoMessage()               {}
func (*GetJssdkSignRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetJssdkSignRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetJssdkSignResponse struct {
	AgentId   string `protobuf:"bytes,1,opt,name=agentId" json:"agentId,omitempty"`
	CorpId    string `protobuf:"bytes,2,opt,name=corpId" json:"corpId,omitempty"`
	NonceStr  string `protobuf:"bytes,3,opt,name=nonceStr" json:"nonceStr,omitempty"`
	Timestamp string `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Signature string `protobuf:"bytes,5,opt,name=signature" json:"signature,omitempty"`
	Url       string `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
}

func (m *GetJssdkSignResponse) Reset()                    { *m = GetJssdkSignResponse{} }
func (m *GetJssdkSignResponse) String() string            { return proto.CompactTextString(m) }
func (*GetJssdkSignResponse) ProtoMessage()               {}
func (*GetJssdkSignResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetJssdkSignResponse) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

func (m *GetJssdkSignResponse) GetCorpId() string {
	if m != nil {
		return m.CorpId
	}
	return ""
}

func (m *GetJssdkSignResponse) GetNonceStr() string {
	if m != nil {
		return m.NonceStr
	}
	return ""
}

func (m *GetJssdkSignResponse) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *GetJssdkSignResponse) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *GetJssdkSignResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetDingUserInfoRequest struct {
	TmpAuthCode string `protobuf:"bytes,1,opt,name=tmpAuthCode" json:"tmpAuthCode,omitempty"`
}

func (m *GetDingUserInfoRequest) Reset()                    { *m = GetDingUserInfoRequest{} }
func (m *GetDingUserInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDingUserInfoRequest) ProtoMessage()               {}
func (*GetDingUserInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetDingUserInfoRequest) GetTmpAuthCode() string {
	if m != nil {
		return m.TmpAuthCode
	}
	return ""
}

type GetDingUserInfoResponse struct {
	MaskedMobile string `protobuf:"bytes,1,opt,name=maskedMobile" json:"maskedMobile,omitempty"`
	Nick         string `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	Unionid      string `protobuf:"bytes,3,opt,name=unionid" json:"unionid,omitempty"`
	DingId       string `protobuf:"bytes,4,opt,name=dingId" json:"dingId,omitempty"`
	Openid       string `protobuf:"bytes,5,opt,name=openid" json:"openid,omitempty"`
	SnsToken     string `protobuf:"bytes,6,opt,name=snsToken" json:"snsToken,omitempty"`
}

func (m *GetDingUserInfoResponse) Reset()                    { *m = GetDingUserInfoResponse{} }
func (m *GetDingUserInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDingUserInfoResponse) ProtoMessage()               {}
func (*GetDingUserInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetDingUserInfoResponse) GetMaskedMobile() string {
	if m != nil {
		return m.MaskedMobile
	}
	return ""
}

func (m *GetDingUserInfoResponse) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *GetDingUserInfoResponse) GetUnionid() string {
	if m != nil {
		return m.Unionid
	}
	return ""
}

func (m *GetDingUserInfoResponse) GetDingId() string {
	if m != nil {
		return m.DingId
	}
	return ""
}

func (m *GetDingUserInfoResponse) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

func (m *GetDingUserInfoResponse) GetSnsToken() string {
	if m != nil {
		return m.SnsToken
	}
	return ""
}

func init() {
	proto.RegisterType((*SendDingMessageRequest)(nil), "pb.SendDingMessageRequest")
	proto.RegisterType((*SendDingMessageRequest_Content)(nil), "pb.SendDingMessageRequest.Content")
	proto.RegisterType((*SendDingMessageRequest_Content_Body)(nil), "pb.SendDingMessageRequest.Content.Body")
	proto.RegisterType((*SendDingMessageRequest_Content_Body_Form)(nil), "pb.SendDingMessageRequest.Content.Body.Form")
	proto.RegisterType((*SendDingMessageRequest_Content_Body_Rich)(nil), "pb.SendDingMessageRequest.Content.Body.Rich")
	proto.RegisterType((*SendDingMessageRequest_Content_Head)(nil), "pb.SendDingMessageRequest.Content.Head")
	proto.RegisterType((*SendDingMessageResponse)(nil), "pb.SendDingMessageResponse")
	proto.RegisterType((*GetJssdkSignRequest)(nil), "pb.GetJssdkSignRequest")
	proto.RegisterType((*GetJssdkSignResponse)(nil), "pb.GetJssdkSignResponse")
	proto.RegisterType((*GetDingUserInfoRequest)(nil), "pb.GetDingUserInfoRequest")
	proto.RegisterType((*GetDingUserInfoResponse)(nil), "pb.GetDingUserInfoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DingDing service

type DingDingClient interface {
	SendMessage(ctx context.Context, in *SendDingMessageRequest, opts ...grpc.CallOption) (*SendDingMessageResponse, error)
	GetJssdkSign(ctx context.Context, in *GetJssdkSignRequest, opts ...grpc.CallOption) (*GetJssdkSignResponse, error)
	GetDingUserInfo(ctx context.Context, in *GetDingUserInfoRequest, opts ...grpc.CallOption) (*GetDingUserInfoResponse, error)
}

type dingDingClient struct {
	cc *grpc.ClientConn
}

func NewDingDingClient(cc *grpc.ClientConn) DingDingClient {
	return &dingDingClient{cc}
}

func (c *dingDingClient) SendMessage(ctx context.Context, in *SendDingMessageRequest, opts ...grpc.CallOption) (*SendDingMessageResponse, error) {
	out := new(SendDingMessageResponse)
	err := grpc.Invoke(ctx, "/pb.DingDing/SendMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dingDingClient) GetJssdkSign(ctx context.Context, in *GetJssdkSignRequest, opts ...grpc.CallOption) (*GetJssdkSignResponse, error) {
	out := new(GetJssdkSignResponse)
	err := grpc.Invoke(ctx, "/pb.DingDing/GetJssdkSign", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dingDingClient) GetDingUserInfo(ctx context.Context, in *GetDingUserInfoRequest, opts ...grpc.CallOption) (*GetDingUserInfoResponse, error) {
	out := new(GetDingUserInfoResponse)
	err := grpc.Invoke(ctx, "/pb.DingDing/GetDingUserInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DingDing service

type DingDingServer interface {
	SendMessage(context.Context, *SendDingMessageRequest) (*SendDingMessageResponse, error)
	GetJssdkSign(context.Context, *GetJssdkSignRequest) (*GetJssdkSignResponse, error)
	GetDingUserInfo(context.Context, *GetDingUserInfoRequest) (*GetDingUserInfoResponse, error)
}

func RegisterDingDingServer(s *grpc.Server, srv DingDingServer) {
	s.RegisterService(&_DingDing_serviceDesc, srv)
}

func _DingDing_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendDingMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DingDingServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DingDing/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DingDingServer).SendMessage(ctx, req.(*SendDingMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DingDing_GetJssdkSign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJssdkSignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DingDingServer).GetJssdkSign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DingDing/GetJssdkSign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DingDingServer).GetJssdkSign(ctx, req.(*GetJssdkSignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DingDing_GetDingUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDingUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DingDingServer).GetDingUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DingDing/GetDingUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DingDingServer).GetDingUserInfo(ctx, req.(*GetDingUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DingDing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.DingDing",
	HandlerType: (*DingDingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _DingDing_SendMessage_Handler,
		},
		{
			MethodName: "GetJssdkSign",
			Handler:    _DingDing_GetJssdkSign_Handler,
		},
		{
			MethodName: "GetDingUserInfo",
			Handler:    _DingDing_GetDingUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dingding.proto",
}

func init() { proto.RegisterFile("dingding.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 722 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xcd, 0x4e, 0x23, 0x47,
	0x10, 0x96, 0xf1, 0xd8, 0xc6, 0x65, 0x94, 0x90, 0x0e, 0x82, 0xd1, 0xe4, 0xcf, 0xf2, 0x05, 0x1f,
	0x90, 0x0f, 0x24, 0xa7, 0x24, 0x87, 0x10, 0x08, 0xc4, 0x48, 0x28, 0xd2, 0x00, 0x67, 0x34, 0x9e,
	0x29, 0xc6, 0x2d, 0xcf, 0x74, 0x4f, 0xba, 0x7b, 0x56, 0xeb, 0x07, 0xd9, 0x17, 0xd9, 0xcb, 0xde,
	0xf7, 0x1d, 0xf6, 0x01, 0xf6, 0xb0, 0xef, 0xb1, 0xaa, 0x9e, 0x6e, 0x03, 0x6b, 0xa3, 0xe5, 0x60,
	0xa9, 0xbf, 0xea, 0xfa, 0xaa, 0xbf, 0xfa, 0xaa, 0x46, 0x86, 0x6f, 0x32, 0x2e, 0x72, 0xfa, 0x4d,
	0x2a, 0x25, 0x8d, 0x64, 0x5b, 0xd5, 0x6c, 0xf4, 0xa1, 0x03, 0xfb, 0xd7, 0x28, 0xb2, 0x33, 0x2e,
	0xf2, 0x2b, 0xd4, 0x3a, 0xc9, 0x31, 0xc6, 0xff, 0x6b, 0xd4, 0x86, 0xfd, 0x09, 0xbd, 0x54, 0x0a,
	0x83, 0xc2, 0x84, 0xad, 0x61, 0x6b, 0x3c, 0x38, 0x1e, 0x4d, 0xaa, 0xd9, 0x64, 0x73, 0xf2, 0xe4,
	0xb4, 0xc9, 0x8c, 0x3d, 0x85, 0x85, 0xd0, 0x2b, 0x75, 0x7e, 0xb3, 0xac, 0x30, 0xdc, 0x1a, 0xb6,
	0xc6, 0xfd, 0xd8, 0x43, 0xf6, 0x33, 0x80, 0xc2, 0x94, 0x57, 0x1c, 0x85, 0xd1, 0x61, 0x7b, 0xd8,
	0x1e, 0xf7, 0xe3, 0x47, 0x91, 0xe8, 0x7d, 0x00, 0x3d, 0x57, 0x8e, 0xfd, 0x01, 0xc1, 0x4c, 0x66,
	0x4b, 0x27, 0xe0, 0xf0, 0xeb, 0x02, 0x26, 0x7f, 0xcb, 0x6c, 0x19, 0x5b, 0x12, 0x91, 0xe7, 0x98,
	0x64, 0xf6, 0xfd, 0x97, 0x91, 0xff, 0xc5, 0x24, 0x8b, 0x2d, 0x89, 0xfd, 0x02, 0x83, 0xb2, 0x49,
	0xba, 0xab, 0x55, 0x11, 0xb6, 0x6d, 0x0f, 0xe0, 0x42, 0xb7, 0xaa, 0x88, 0x3e, 0x6d, 0x41, 0x40,
	0x8f, 0xb1, 0x7d, 0xe8, 0x26, 0xb5, 0x99, 0x4b, 0x65, 0x55, 0xf6, 0x63, 0x87, 0xc8, 0x01, 0xef,
	0x9f, 0x73, 0xc0, 0x7b, 0xf3, 0x13, 0xc0, 0x3d, 0x2f, 0xf0, 0x2e, 0x95, 0xb5, 0x30, 0xae, 0x74,
	0x9f, 0x22, 0xa7, 0x14, 0x60, 0x7f, 0x41, 0x70, 0x2f, 0x55, 0x19, 0x06, 0xc3, 0xf6, 0x78, 0x70,
	0x7c, 0xf4, 0xc2, 0xa6, 0x27, 0xe7, 0x52, 0x95, 0xb1, 0x65, 0xb2, 0x3d, 0xe8, 0xf0, 0x32, 0xc9,
	0x31, 0xec, 0xd8, 0xda, 0x0d, 0xa0, 0xba, 0x8a, 0xa7, 0xf3, 0xb0, 0x6b, 0xfd, 0x78, 0x71, 0xdd,
	0x98, 0xa7, 0xf3, 0xd8, 0x32, 0xa9, 0xae, 0xe1, 0xa6, 0xc0, 0xb0, 0xd7, 0xd4, 0xb5, 0x20, 0x9a,
	0x40, 0x40, 0x6f, 0xb3, 0x5d, 0x68, 0x2f, 0x70, 0xe9, 0x5c, 0xa0, 0x23, 0xe5, 0xbf, 0x4a, 0x8a,
	0xda, 0xaf, 0x40, 0x03, 0xa2, 0x23, 0x08, 0xa8, 0x26, 0xe5, 0x8b, 0xba, 0xf4, 0xf9, 0xa2, 0x2e,
	0x19, 0x83, 0xa0, 0x16, 0xdc, 0xfb, 0x65, 0xcf, 0xd1, 0x6f, 0x10, 0xd0, 0x58, 0xc8, 0xce, 0x59,
	0x9e, 0xca, 0x62, 0xe5, 0xb3, 0x87, 0xc4, 0x32, 0xf8, 0x7a, 0xc5, 0xa2, 0xf3, 0xe8, 0x4d, 0x0b,
	0x0e, 0xd6, 0x9a, 0xd3, 0x95, 0x14, 0x1a, 0xd9, 0x11, 0x7c, 0x47, 0x5f, 0xc1, 0x7f, 0x15, 0x8a,
	0x7f, 0x94, 0x92, 0xea, 0x54, 0x66, 0x68, 0x6b, 0x76, 0xe2, 0xf5, 0x0b, 0x16, 0xc1, 0x36, 0x12,
	0xb8, 0xd2, 0xb9, 0x7b, 0x61, 0x85, 0x49, 0x93, 0xae, 0xd3, 0x14, 0xb5, 0xb6, 0x53, 0xdc, 0x8e,
	0x3d, 0xa4, 0xa5, 0x30, 0x89, 0x5e, 0x4c, 0xcf, 0xc2, 0xc0, 0x16, 0x76, 0x68, 0x74, 0x08, 0xdf,
	0x5f, 0xa0, 0xb9, 0xd4, 0x3a, 0x5b, 0x5c, 0xf3, 0x5c, 0xf8, 0x6f, 0x6d, 0x17, 0xda, 0xb4, 0x65,
	0xce, 0x8a, 0x5a, 0x15, 0xa3, 0xb7, 0x2d, 0xd8, 0x7b, 0x9a, 0xe9, 0xd4, 0x87, 0xd0, 0x4b, 0x72,
	0x14, 0x66, 0x9a, 0x79, 0x1f, 0x1c, 0xa4, 0x37, 0x53, 0xa9, 0xaa, 0x69, 0xe6, 0x74, 0x3a, 0x44,
	0x1d, 0x08, 0x29, 0x52, 0xbc, 0x36, 0xca, 0x2d, 0xdb, 0x0a, 0xb3, 0x1f, 0xa1, 0x6f, 0x78, 0x89,
	0xda, 0x24, 0x65, 0x65, 0xa5, 0xf6, 0xe3, 0x87, 0x00, 0xdd, 0x6a, 0x9e, 0x8b, 0xc4, 0xd4, 0xca,
	0xef, 0xd2, 0x43, 0xc0, 0x8b, 0xee, 0x3e, 0x88, 0xfe, 0x1d, 0xf6, 0x2f, 0xd0, 0x90, 0xe7, 0xb7,
	0x1a, 0xd5, 0x54, 0xdc, 0x4b, 0xdf, 0xe0, 0x10, 0x06, 0xa6, 0xac, 0x4e, 0x6a, 0x33, 0x5f, 0xb9,
	0xdd, 0x8f, 0x1f, 0x87, 0x46, 0xef, 0x5a, 0x70, 0xb0, 0x46, 0x76, 0x3d, 0x8f, 0x60, 0xa7, 0x4c,
	0xf4, 0x02, 0xb3, 0x2b, 0x39, 0xe3, 0x85, 0xa7, 0x3f, 0x89, 0xd1, 0x16, 0x08, 0x9e, 0x2e, 0xfc,
	0x16, 0xd0, 0x99, 0xbc, 0xaa, 0x05, 0x97, 0x82, 0x67, 0xae, 0x71, 0x0f, 0xc9, 0x2b, 0x1a, 0xf5,
	0x34, 0x73, 0x4d, 0x3b, 0x44, 0x71, 0x59, 0x21, 0x11, 0x9a, 0x76, 0x1d, 0x22, 0x0f, 0xb5, 0xd0,
	0x37, 0x72, 0x81, 0xc2, 0x35, 0xbc, 0xc2, 0xc7, 0x1f, 0x5b, 0xb0, 0x4d, 0xb2, 0xe9, 0xc7, 0xce,
	0x61, 0x40, 0x7b, 0xe7, 0x76, 0x8e, 0x45, 0xcf, 0x7f, 0x65, 0xd1, 0x0f, 0x1b, 0xef, 0x5c, 0xcb,
	0x27, 0xb0, 0xf3, 0x78, 0xfc, 0xec, 0x80, 0x92, 0x37, 0xac, 0x4e, 0x14, 0xae, 0x5f, 0xb8, 0x12,
	0x97, 0xf0, 0xed, 0x17, 0x86, 0x36, 0x72, 0x36, 0x8f, 0xa8, 0x91, 0xf3, 0xcc, 0x04, 0x66, 0x5d,
	0xfb, 0x97, 0xf1, 0xeb, 0xe7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xdb, 0xe3, 0xa8, 0x44, 0x06,
	0x00, 0x00,
}
